# name: "pr test1"
# on:
#   pull_request:
#     types: [opened]
#   issue_comment:
#     types: [created]
# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: diyalab/pull-request-comment-trigger@v1.1.0
#         id: check
#         with:
#           trigger: 'run test'
#           reaction: rocket
#         env:
#           GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
#       - name: Report Unit tests starting
#         if: steps.check.outputs.triggered == 'true'
#         uses: dflydev/check-runs-action@v1.0.6
#         env: 
#           ACTIONS_ALLOW_UNSECURE_COMMANDS: true
#         with:
#           token: ${{ secrets.GITHUB_TOKEN }}
#           id: unit_test
#           status: in_progress
#           name: unit tests
#       - uses: actions/checkout@v3
#         if: steps.check.outputs.triggered == 'true'
#       - run: 'echo Found it! siva'
#         if: steps.check.outputs.triggered == 'true'
#       - run: |
#           cat test.js
#         if: steps.check.outputs.triggered == 'true'
#       - name: sleep
#         run: sleep 60
#       - name: Report Unit tests ending
#         if: steps.check.outputs.triggered == 'true'
#         uses: dflydev/check-runs-action@v1.0.6
#         env: 
#           ACTIONS_ALLOW_UNSECURE_COMMANDS: true
#         with:
#           token: ${{ secrets.GITHUB_TOKEN }}
#           id: unit_test
#           conclusion: ${{ steps.sleep.outcome }}
#           fail-on-error: true
# name: "pr test1"
# on:
#   pull_request:
#     types: [opened]
#   issue_comment:
#     types: [created]
# jobs:
#   test_with_init:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v1
#     - uses: diyalab/pull-request-comment-trigger@v1.1.0
#       id: check
#       with:
#         trigger: 'run test'
#         reaction: rocket
#       env:
#         GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
#     - uses: LouisBrunner/checks-action@v1.1.1
#       id: queue
#       with:
#         token: ${{ secrets.GITHUB_TOKEN }}
#         name: Test With Init
#         status: queued
#     - run: sleep 60
#       if: steps.check.outputs.triggered == 'true'
#     - uses: LouisBrunner/checks-action@v1.1.1
#       id: init
#       if: steps.check.outputs.triggered == 'true'
#       with:
#         token: ${{ secrets.GITHUB_TOKEN }}
#         check_id: ${{ steps.queue.outputs.check_id }}
#         status: in_progress
#     - run: sleep 60
#       if: steps.check.outputs.triggered == 'true'
#     - uses: LouisBrunner/checks-action@v1.1.1
#       if: steps.check.outputs.triggered == 'true'
#       with:
#         token: ${{ secrets.GITHUB_TOKEN }}
#         check_id: ${{ steps.queue.outputs.check_id }}
#         status: completed
#         output: |
#           {"summary":"Some warnings in README.md"}
#         conclusion: failure



# name: "pr test1"
# on:
#   pull_request:
#     types: [opened]
#   issue_comment:
#     types: [created]
# jobs:
#   status_check:
#     runs-on: ubuntu-latest
#     name: Creates status check for scheduled deployments
#     steps:
#       - uses: actions/checkout@v3
#       - uses: diyalab/pull-request-comment-trigger@v1.1.0
#         id: check
#         with:
#           trigger: 'run test'
#           reaction: rocket
#         env:
#           GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
#       - name: Create status check
#         continue-on-error: true
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           REPO: ${{ github.repository }}
#           RUN_ID: ${{ github.run_id }}
#         # if: steps.check.outputs.triggered == 'true'
#         run: |
#           DEPLOY_COMMIT=$(git rev-parse HEAD)
#           gh api \
#             --method POST \
#             -H "Accept: application/vnd.github.v3+json" \
#             /repos/$REPO/statuses/$DEPLOY_COMMIT \
#             -f state='success' \
#             -f target_url='https://github.com/$REPO/actions/runs/$RUN_ID' \
#             -f description='The latest scheduled deploy succeeded!' \
#             -f context='scheduled-deploy'

name: "pr test1"
on:
  pull_request:
    types: [opened]
    types: [ labeled ]
  # issue_comment:
  #   types: [created]
jobs:
  build:
    if: ${{ github.event.label.name == 'test' }}
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Run a one-line script
      run: echo Hello, world!