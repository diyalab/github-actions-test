name: Create Release
on:
  workflow_dispatch:
    inputs:
      name:
        required: true
        type: choice
        description: Environment Name
        options:
          - QA
          - PROD
jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: make release branch name
        id: release-name
        shell: bash
        run: |
          date=`echo $(date '+%Y-%m-%d') | tr -d '-'`
          echo "::set-output name=release::release-$date"
          echo "::set-output name=date::$date"

      - name: check-release-barnch-exists
        run: |
          echo ${{ steps.release-name.outputs.release }}
          if git rev-parse --verify --quiet remotes/origin/${{ steps.release-name.outputs.release }} > /dev/null; then
            echo "Branch name ${{ steps.release-name.outputs.release }} already exists."
            exit 1
          fi
      - name: create Release branch
        run: git checkout -b ${{ steps.release-name.outputs.release }}
      - name: Initialize mandatory git config
        run: |
          git config user.name "GitHub Actions"
          git config user.email noreply@github.com
      - name: push Brach to remote
        run: git push -u origin ${{ steps.release-name.outputs.release }}:${{ steps.release-name.outputs.release }}
      - name: git create and push tags
        run: |
          git branch -a
          git tag qa_${{ steps.release-name.outputs.release }}
          git push --tags
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: qa_${{ steps.release-name.outputs.release }}
          name: Release qa_${{ steps.release-name.outputs.release }}
          body: ${{ steps.tag_version.outputs.changelog }}

      # - name: Initialize mandatory git config
      #   run: |
      #     git config user.name "GitHub Actions"
      #     git config user.email noreply@github.com
