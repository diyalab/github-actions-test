name: Cherrypick
on:
  workflow_dispatch:
    inputs:
      Env:
        description: "Environment to which cherrypicking"
        required: true
        default: "qa"
        type: choice
        options:
          - qa
          - prod
      commitIds:
        description: "Commit id's to cherrypick"
        required: true
        type: string
jobs:
  cherry-pick:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Initialize mandatory git config
        run: |
          git config user.name "GitHub Actions"
          git config user.email noreply@github.com
      # - name: make release branch name
      #   id: release-name
      #   shell: bash
      #   run: |
      #     date=`echo $(date '+%Y-%m-%d') | tr -d '-'`
      #     echo "::set-output name=release::release-$date"
      #     echo "::set-output name=date::$date"
      #     echo "::set-output name=repo-name::$GITHUB_REPOSITORY"
      - name: echo
        id: echo
        shell: bash
        run: |
          echo $GITHUB_REF_NAME
          release_date=`cut -d'-' -f2 <<< $GITHUB_REF_NAME`
          search_key=qa_$release_date
          git for-each-ref --sort=creatordate --format '%(refname) %(creatordate)' refs/tags | grep $search_key > tags.txt
          latest_tag_with_datetime=`tail -1 tags.txt | xargs`
          latest_tag_ref=`cut -d' ' -f1 <<< $latest_tag_with_datetime`
          latest_tag=`cut -d'/' -f3 <<< $latest_tag_ref`
          git branch -a
          echo  $latest_tag
          count=`echo $latest_tag | grep -o "_" | wc -l`
          if [ $count == 1 ]
          then
              echo "old tag is $latest_tag"
              new_tag=$tag"_"RC1
              echo "new tag is $new_tag"
          else 
              if [ $count == 2 ]
              then
                  echo "old tag is $latest_tag"
                  f1=`cut -d'_' -f1 <<< $latest_tag` 
                  f2=`cut -d'_' -f2 <<< $latest_tag` 
                  f3=`cut -d'_' -f3 <<< $latest_tag` 
                  rc_number=`echo $f3 | grep -Eo '[0-9]+$'`
                  rc_number_new=$((rc_number+1))
                  new_tag=$f1_$f2_RC$rc_number_new
                  echo $new_tag
              fi
          fi
      # for i in $(echo ${{ inputs.commitIds }}| sed "s/,/ /g" )
      # do
      #     git cherry-pick -x $i
      # done
      # git push origin $GITHUB_REF_NAME
